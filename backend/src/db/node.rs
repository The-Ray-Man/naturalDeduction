//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use super::sea_orm_active_enums::Rules;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "Node")]
pub struct Model {
    pub child_id: Option<Uuid>,
    pub rule: Rules,
    pub parent_id: Uuid,
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub order: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::statement::Entity",
        from = "Column::ChildId",
        to = "super::statement::Column::Id",
        on_update = "Cascade",
        on_delete = "SetNull"
    )]
    Statement2,
    #[sea_orm(
        belongs_to = "super::statement::Entity",
        from = "Column::ParentId",
        to = "super::statement::Column::Id",
        on_update = "Cascade",
        on_delete = "Restrict"
    )]
    Statement1,
}

impl ActiveModelBehavior for ActiveModel {}
