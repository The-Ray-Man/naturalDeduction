//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "Exercise")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    #[sea_orm(column_name = "statementId")]
    pub statement_id: Uuid,
    pub likes: i32,
    pub dislikes: i32,
    #[sea_orm(column_type = "Double")]
    pub difficulty: f64,
    pub num_responses: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::statement::Entity",
        from = "Column::StatementId",
        to = "super::statement::Column::Id",
        on_update = "Cascade",
        on_delete = "Restrict"
    )]
    Statement,
}

impl Related<super::statement::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Statement.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
