datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model Statement {
  id  String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  lhs String
  rhs String

  Exercise Exercise[]

  NodeC Node[] @relation("Child")

  NodeP Node[] @relation("Parent")
}

model Node {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  parent_id String    @db.Uuid
  Parent    Statement @relation("Parent", fields: [parent_id], references: [id])

  Child    Statement? @relation("Child", fields: [child_id], references: [id])
  child_id String?    @db.Uuid
  order   Int 
  rule     rules

  // @@unique([parent_id, child_id, rule])
}

// model Node {
// statement_id       String @db.Uuid 
// Statement Statement @relation("Stmt", fields: [statement_id], references: [id])
// child_id String @db.Uuid
// child    Node   @relation("Child", fields: [statement_id], references: [statement_id])
// rule     rules
// Node     Node[] @relation("Child")

// @@unique([statement_id, child_id, rule])
// }

model Exercise {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  statementId   String    @db.Uuid
  likes         Int
  dislikes      Int
  difficulty    Float     @default(0)
  num_responses Int       @default(0)
  statement     Statement @relation(fields: [statementId], references: [id])
}

enum rules {
  Ax
  ImplIntro
  ImplElim
  FalseElim
  NotIntro
  NotElim
  AndIntro
  AndElimL
  AndElimR
  OrIntroL
  OrIntroR
  OrElim
  ForallElim
  ForallIntro
  ExistsElim
  ExistsIntro
  AlphaExists
  AlphaForall
}
